{"version":3,"file":"ngx-formly-material-multicheckbox.js","sources":["@ngx-formly/material/multicheckbox/multicheckbox.type.ts","@ngx-formly/material/multicheckbox/multicheckbox.module.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,MAsBa,wBAAyB,SAAQ;OAAS,OAlBvD;wBAqBE,mBAAc,GAAG;MACf,eAAe,EAAE,kBACf;eAAkB,EAAE,IAAI,kBACxB,UAAU;AAAE;OAAQ,kBACpB,OAAO,EAAE,EAAE,kBACX,KAAK,EAAE,QAAQ;CAChB,WACF,CAAC,MA0BH;;2BAxBC,QAAQ,CAAC,KAAU,EAAE;CAAgB,YACnC,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,OAAO,EAAE,cAC5B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,mBAC/B,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC,mBAC1C,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC,MAAM;;MAAC,CAAC,IAAI,CAAC,KAAK,KAAK,EAAC,CAC/D,CAAC;SACH,cAAM;CACL,IAAI,CAAC;CAAW,CAAC,UAAU,mBAAM,IAAI,CAAC;UAAW,CAAC,KAAK,IAAE,CAAC,KAAK;CAAG,OAAO,IAAG,CAAC,UAC9E,SACD,IAAI,CAAC;KAAW,CAAC,aAAa,EAAE,CAAC;GAClC;;;;AA5CH,MAsBa,wBAAyB,SAAQ,SAAS;AACvD,IAnBA;AACG;AAA6B,QAoB9B,mBAAc,GAAG;AACnB,YAAI,eAAe,EAAE;AACrB,gBAAM,kBAAkB,EAAE,IAAI;AAC9B,gBAAM,UAAU,EAAE,QAAQ;AAC1B,gBAAM,OAAO,EAAE,EAAE;AACjB,gBAAM,KAAK,EAAE,QAAQ;AAAE,aAClB;AACL,SAAG,CAAC;AACJ,KAyBC;AACD;AAAQ;AAAwB;AAA0B;AAAmB;AAAQ,IAzBnF,QAAQ,CAAC,KAAU,EAAE,OAAgB;AACvC,QAAI,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,OAAO,EAAE;AAClC,YAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO;AACzC,kBAAU,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC;AACpD,kBAAU,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC,MAAM;AAAM;AAEjD;AACkB;AAAoB,gBAHM,CAAC,IAAI,CAAC,KAAK,KAAK,EAAC,CAC/D,CAAC;AACR,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,WAAW,CAAC,UAAU,mBAAM,IAAI,CAAC,WAAW,CAAC,KAAK,IAAE,CAAC,KAAK,GAAG,OAAO,IAAG,CAAC;AACnF,SAAK;AACL,QAAI,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC;;AAErC;AAEC;AAAQ;AAEN;IAFD,gBAAgB,MAAK,1BAEZ,IAFT,gBAAgB,MAAK;AACvB;AACO;AACF;AAAmB;IADtB,SAAS,CAAC,MAAW,pBACS,IAD9B,SAAS,CAAC,MAAW;AACvB;cAAU,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,5CAAf,cAAf,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK;QAEpC,OAAO,KAAK,KACV,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,OAAO,jDAF9B,QACI,OAAO,KAAK,KACV,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,OAAO;eACnB,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,jDAA7C,eAAW,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;cACnC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CACxB,CAAC,nCADN,cAAU,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CACxB,CAAC;KACH,LAAH,KAAG;AACH;oDAtDC,SAAS,SAAC,kBACT,QAAQ,EAAE,gCAAgC,kBAC1C,QAAQ,EAAE,1GAFX,SAAS,SAAC,kBACT,QAAQ,EAAE,gCAAgC,kBAC1C,QAAQ,EAAE;;;;;;2HAcT,cACF,4EAEE,YAAY,SAAC,WAAW,1HAHxB,cACF;;mBCrBD,MA+Ba;kBAA4B;;UArBxC,QAAQ,SAAC,kBACR,YAAY,EAAE,CAAC,wBAAwB,CAAC,kBACxC,OAAO,EAAE;iBACP,YAAY,sBACZ,mBAAmB,sBAEnB,iBAAiB,sBAEjB,WDIA;YCJwB,sBACxB,lCDGC;QCHiB,sBAClB,YAAY,CAAC,QAAQ,CAAC,pDDEuB,yBAC9C,YAAY,SAAC,WAAW;AAAM;YCF3B,KAAK,EAAE,8BACL,kCACE,IAAI,EAAE,eAAe;sBACrB,SAAS,EAAE,wBAAwB;QACnC,QAAQ,EAAE,CAAC;MAAY,CAAC;qBACzB,2BACF;WACF,CAAC;GACH,eACF;;;;;;;;;;;;;;;;;;oBDPkC;AAAC;AAAC;AAAI;AAEjC;AAKN;AC9BF,MA+Ba,4BAA4B;AAAG;wDArB3C,QAAQ,SAAC,kBACR;EAAY,EAAE,CAAC,wBAAwB,CAAC,kBACxC,OAAO,EAAE,sBACP,YAAY,sBACZ,mBAAmB,sBAEnB,iBAAiB;MAEjB;IAAwB,sBACxB;WAAkB;EAClB,YAAY,CAAC,QAAQ,CAAC;YACpB,KAAK,EAAE;iBACL;eACE,IAAI,EAAE;WAAe;uBACrB,SAAS,EAAE;WAAwB,kCACnC,QAAQ,EAAE,CAAC;OAAY,CAAC,+BACzB;iBACF;iBACF;AAAC;GACH;GACF;;;;;;;;;;;;;;;;;;;;;;;;;;0BACI;AAAC;AAAC;AAAI;AAAkC;AACuE;AAAI;AAAC;AAAI;AAAkC;AAAqH;AAAI;AAAC","sourcesContent":["import { Component, ViewChildren, QueryList } from '@angular/core';\nimport { FieldType } from '@ngx-formly/material/form-field';\nimport { MatCheckbox } from '@angular/material/checkbox';\n\n@Component({\n  selector: 'formly-field-mat-multicheckbox',\n  template: `\n    <ng-container *ngFor=\"let option of to.options | formlySelectOptions:field | async; let i = index;\">\n      <mat-checkbox\n        [id]=\"id + '_' + i\"\n        [formlyAttributes]=\"field\"\n        [tabIndex]=\"to.tabindex\"\n        [color]=\"to.color\"\n        [labelPosition]=\"to.labelPosition\"\n        [checked]=\"isChecked(option)\"\n        [disabled]=\"formControl.disabled\"\n        (change)=\"onChange(option.value, $event.checked)\">\n          {{ option.label }}\n      </mat-checkbox>\n    </ng-container>\n  `,\n})\nexport class FormlyFieldMultiCheckbox extends FieldType {\n  @ViewChildren(MatCheckbox) checkboxes!: QueryList<MatCheckbox>;\n\n  defaultOptions = {\n    templateOptions: {\n      hideFieldUnderline: true,\n      floatLabel: 'always',\n      options: [],\n      color: 'accent', // workaround for https://github.com/angular/components/issues/18465\n    },\n  };\n\n  onChange(value: any, checked: boolean) {\n    if (this.to.type === 'array') {\n      this.formControl.patchValue(checked\n        ? [...(this.formControl.value || []), value]\n        : [...(this.formControl.value || [])].filter(o => o !== value),\n      );\n    } else {\n      this.formControl.patchValue({ ...this.formControl.value, [value]: checked });\n    }\n    this.formControl.markAsTouched();\n  }\n\n  // TODO: find a solution to prevent scroll on focus\n  onContainerClick() {}\n\n  isChecked(option: any) {\n    const value = this.formControl.value;\n\n    return value && (\n      this.to.type === 'array'\n        ? (value.indexOf(option.value) !== -1)\n        : value[option.value]\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\nimport { FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { FormlyFieldMultiCheckbox } from './multicheckbox.type';\n\n@NgModule({\n  declarations: [FormlyFieldMultiCheckbox],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n\n    MatCheckboxModule,\n\n    FormlyMatFormFieldModule,\n    FormlySelectModule,\n    FormlyModule.forChild({\n      types: [\n        {\n          name: 'multicheckbox',\n          component: FormlyFieldMultiCheckbox,\n          wrappers: ['form-field'],\n        },\n      ],\n    }),\n  ],\n})\nexport class FormlyMatMultiCheckboxModule { }\n"]}