{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@ngx-formly/core/json-schema/formly-json-schema.service.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__read","o","m","Symbol","iterator","r","ar","next","done","push","value","error","isEmpty","v","undefined","isConst","schema","enum","totalMatchedFields","field","fieldGroup","reduce","f","key","getFieldInitialValue","FormlyJsonschema","toFieldConfig","options","_toFieldConfig","_this_1","resolveSchema","type","guessType","defaultValue","default","templateOptions","label","title","readonly","readOnly","description","resetOnHide","shareFormControl","ignoreDefault","addValidator","_a","parsers","Number","min","minimum","max","maximum","exclusiveMinimum","exclusiveMaximum","step","multipleOf","isInteger","Math","floor","schemaType","Array","isArray","forEach","prop","resolveDependencies","propDeps_1","schemaDeps_1","keys","properties","required","expressionProperties","templateOptions.required","some","k","oneOfSchema","oneOf","every","oneOfSchemaItem","_b","constSchema","hideExpression","const","resolveMultiSchema","anyOf","minItems","maxItems","uniqueItems","from","Set","map","JSON","stringify","items","isEnum","_this_2","defineProperty","get","itemSchema","additionalItems","enumerable","configurable","multiple","toEnumOptions","formlyConfig","reverseDeepMerge","$ref","resolveDefinition","allOf","resolveAllOf","baseSchema","Error","base","__spread","concat","mode","schemas","fs","control","parent","formControl","filter","isFieldValid","sort","f1","f2","matchedFields1","matchedFields2","normalizedValue","formattedValue","setValue","split","uri","pointer","definition","def","path","annotation","deps","schemaDeps","dependencies","dependency","dep","name","validator","validators","toEnum","_buildField","valid","Injectable","args","providedIn"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { JSONSchema7, JSONSchema7TypeName } from 'json-schema';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport {\n  ÉµreverseDeepMerge as reverseDeepMerge,\n  ÉµgetFieldInitialValue as getFieldInitialValue,\n  Éµclone as clone,\n} from '@ngx-formly/core';\n\nexport interface FormlyJsonschemaOptions {\n  /**\n   * allows to intercept the mapping, taking the already mapped\n   * formly field and the original JSONSchema source from which it\n   * was mapped.\n   */\n  map?: (mappedField: FormlyFieldConfig, mapSource: JSONSchema7) => FormlyFieldConfig;\n}\n\nfunction isInteger(value: any) {\n  return Number.isInteger\n    ? Number.isInteger(value)\n    : typeof value === 'number' && Math.floor(value) === value;\n}\n\nfunction isEmpty(v: any) {\n  return v === '' || v === undefined || v === null;\n}\n\nfunction isConst(schema: JSONSchema7) {\n  return schema.hasOwnProperty('const') || (schema.enum && schema.enum.length === 1);\n}\n\nfunction totalMatchedFields(field: FormlyFieldConfig): number {\n  if (!field.fieldGroup) {\n    return field.key && getFieldInitialValue(field) !== undefined ? 1 : 0;\n  }\n\n  return field.fieldGroup.reduce((s, f) => totalMatchedFields(f) + s, 0);\n}\n\ninterface IOptions extends FormlyJsonschemaOptions {\n  schema: JSONSchema7;\n  resetOnHide?: boolean;\n  shareFormControl?: boolean;\n  ignoreDefault?: boolean;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class FormlyJsonschema {\n  toFieldConfig(schema: JSONSchema7, options?: FormlyJsonschemaOptions): FormlyFieldConfig {\n    return this._toFieldConfig(schema, { schema, ...(options || {}) });\n  }\n\n  private _toFieldConfig(schema: JSONSchema7, options: IOptions): FormlyFieldConfig {\n    schema = this.resolveSchema(schema, options);\n\n    let field: FormlyFieldConfig = {\n      type: this.guessType(schema),\n      defaultValue: schema.default,\n      templateOptions: {\n        label: schema.title,\n        readonly: schema.readOnly,\n        description: schema.description,\n      },\n    };\n\n    if (options.resetOnHide) {\n      field['resetOnHide'] = true;\n    }\n\n    if (options.shareFormControl === false) {\n      field['shareFormControl'] = false;\n    }\n\n    if (options.ignoreDefault) {\n      delete field.defaultValue;\n    }\n\n    switch (field.type) {\n      case 'null': {\n        this.addValidator(field, 'null', ({ value }) => value === null);\n        break;\n      }\n      case 'number':\n      case 'integer': {\n        field.parsers = [v => isEmpty(v) ? null : Number(v)];\n        if (schema.hasOwnProperty('minimum')) {\n          field.templateOptions.min = schema.minimum;\n        }\n\n        if (schema.hasOwnProperty('maximum')) {\n          field.templateOptions.max = schema.maximum;\n        }\n\n        if (schema.hasOwnProperty('exclusiveMinimum')) {\n          field.templateOptions.exclusiveMinimum = schema.exclusiveMinimum;\n          this.addValidator(field, 'exclusiveMinimum', ({ value }) => isEmpty(value) || (value > schema.exclusiveMinimum));\n        }\n\n        if (schema.hasOwnProperty('exclusiveMaximum')) {\n          field.templateOptions.exclusiveMaximum = schema.exclusiveMaximum;\n          this.addValidator(field, 'exclusiveMaximum', ({ value }) => isEmpty(value) || (value < schema.exclusiveMaximum));\n        }\n\n        if (schema.hasOwnProperty('multipleOf')) {\n          field.templateOptions.step = schema.multipleOf;\n          this.addValidator(field, 'multipleOf', ({ value }) => {\n            if (isEmpty(value) || typeof value !== 'number' || value === 0 || schema.multipleOf <= 0) {\n              return true;\n            }\n\n            return isInteger(value / schema.multipleOf);\n          });\n        }\n        break;\n      }\n      case 'string': {\n        const schemaType = schema.type as JSONSchema7TypeName;\n        if (Array.isArray(schemaType) && (schemaType.indexOf('null') !== -1)) {\n          field.parsers = [v => isEmpty(v) ? null : v];\n        }\n\n        ['minLength', 'maxLength', 'pattern'].forEach(prop => {\n          if (schema.hasOwnProperty(prop)) {\n            field.templateOptions[prop] = schema[prop];\n          }\n        });\n        break;\n      }\n      case 'object': {\n        field.fieldGroup = [];\n\n        const [propDeps, schemaDeps] = this.resolveDependencies(schema);\n        Object.keys(schema.properties || {}).forEach(key => {\n          const f = this._toFieldConfig(<JSONSchema7> schema.properties[key], options);\n          field.fieldGroup.push(f);\n          f.key = key;\n          if (Array.isArray(schema.required) && schema.required.indexOf(key) !== -1) {\n            f.templateOptions.required = true;\n          }\n          if (f.templateOptions && !f.templateOptions.required && propDeps[key]) {\n            f.expressionProperties = {\n              'templateOptions.required': m => m && propDeps[key].some(k => !isEmpty(m[k])),\n            };\n          }\n\n          if (schemaDeps[key]) {\n            const getConstValue = (s: JSONSchema7) => {\n              return s.hasOwnProperty('const') ? s.const : s.enum[0];\n            };\n\n            const oneOfSchema = schemaDeps[key].oneOf;\n            if (\n              oneOfSchema\n              && oneOfSchema.every(o => o.properties && o.properties[key] && isConst(o.properties[key]))\n            ) {\n              oneOfSchema.forEach(oneOfSchemaItem => {\n                const { [key]: constSchema, ...properties } = oneOfSchemaItem.properties;\n                field.fieldGroup.push({\n                  ...this._toFieldConfig({ ...oneOfSchemaItem, properties }, { ...options, resetOnHide: true }),\n                  hideExpression: m => !m || getConstValue(constSchema) !== m[key],\n                });\n              });\n            } else {\n              field.fieldGroup.push({\n                ...this._toFieldConfig(schemaDeps[key], options),\n                hideExpression: m => !m || isEmpty(m[key]),\n              });\n            }\n\n          }\n        });\n\n        if (schema.oneOf) {\n          field.fieldGroup.push(this.resolveMultiSchema(\n            'oneOf',\n            <JSONSchema7[]> schema.oneOf,\n            { ...options, shareFormControl: false },\n          ));\n        }\n\n        if (schema.anyOf) {\n          field.fieldGroup.push(this.resolveMultiSchema(\n            'anyOf',\n            <JSONSchema7[]> schema.anyOf,\n            options,\n          ));\n        }\n        break;\n      }\n      case 'array': {\n        if (schema.hasOwnProperty('minItems')) {\n          field.templateOptions.minItems = schema.minItems;\n          this.addValidator(field, 'minItems', ({ value }) => isEmpty(value) || (value.length >= schema.minItems));\n        }\n        if (schema.hasOwnProperty('maxItems')) {\n          field.templateOptions.maxItems = schema.maxItems;\n          this.addValidator(field, 'maxItems', ({ value }) => isEmpty(value) || (value.length <= schema.maxItems));\n        }\n        if (schema.hasOwnProperty('uniqueItems')) {\n          field.templateOptions.uniqueItems = schema.uniqueItems;\n          this.addValidator(field, 'uniqueItems', ({ value }) => {\n            if (isEmpty(value) || !schema.uniqueItems) {\n              return true;\n            }\n\n            const uniqueItems = Array.from(\n              new Set(value.map((v: any) => JSON.stringify(v))),\n            );\n\n            return uniqueItems.length === value.length;\n          });\n        }\n\n        // resolve items schema needed for isEnum check\n        if (schema.items && !Array.isArray(schema.items)) {\n          schema.items = this.resolveSchema(<JSONSchema7> schema.items, options);\n        }\n\n        // TODO: remove isEnum check once adding an option to skip extension\n        if (!this.isEnum(schema)) {\n          const _this = this;\n          Object.defineProperty(field, 'fieldArray', {\n            get: function() {\n              if (!Array.isArray(schema.items)) {\n                // When items is a single schema, the additionalItems keyword is meaningless, and it should not be used.\n                return _this._toFieldConfig(<JSONSchema7> schema.items, options);\n              }\n\n              const length = this.fieldGroup ? this.fieldGroup.length : 0;\n              const itemSchema = schema.items[length]\n                ? schema.items[length]\n                : schema.additionalItems;\n\n              return itemSchema\n                ? _this._toFieldConfig(<JSONSchema7> itemSchema, options)\n                : {};\n            },\n            enumerable: true,\n            configurable: true,\n          });\n        }\n\n        break;\n      }\n    }\n\n    if (schema.hasOwnProperty('const')) {\n      field.templateOptions.const = schema.const;\n      this.addValidator(field, 'const', ({ value }) => value === schema.const);\n      if (!field.type) {\n        field.defaultValue = schema.const;\n      }\n    }\n\n    if (this.isEnum(schema)) {\n      field.templateOptions.multiple = field.type === 'array';\n      field.type = 'enum';\n      field.templateOptions.options = this.toEnumOptions(schema);\n    }\n\n    // map in possible formlyConfig options from the widget property\n    if (schema['widget'] && schema['widget'].formlyConfig) {\n      field = reverseDeepMerge(schema['widget'].formlyConfig, field);\n    }\n\n    // if there is a map function passed in, use it to allow the user to\n    // further customize how fields are being mapped\n    return options.map ? options.map(field, schema) : field;\n  }\n\n  private resolveSchema(schema: JSONSchema7, options: IOptions) {\n    if (schema.$ref) {\n      schema = this.resolveDefinition(schema, options);\n    }\n\n    if (schema.allOf) {\n      schema = this.resolveAllOf(schema, options);\n    }\n\n    return schema;\n  }\n\n  private resolveAllOf({ allOf, ...baseSchema }: JSONSchema7, options: IOptions) {\n    if (!allOf.length) {\n      throw Error(`allOf array can not be empty ${allOf}.`);\n    }\n\n    return allOf.reduce((base: JSONSchema7, schema: JSONSchema7) => {\n      schema = this.resolveSchema(schema, options);\n      if (base.required && schema.required) {\n        base.required = [...base.required, ...schema.required];\n      }\n\n      if (schema.uniqueItems) {\n        base.uniqueItems = schema.uniqueItems;\n      }\n\n      // resolve to min value\n      ['maxLength', 'maximum', 'exclusiveMaximum', 'maxItems', 'maxProperties']\n        .forEach(prop => {\n          if (!isEmpty(base[prop]) && !isEmpty(schema[prop])) {\n            base[prop] = base[prop] < schema[prop] ? base[prop] : schema[prop];\n          }\n        });\n\n      // resolve to max value\n      ['minLength', 'minimum', 'exclusiveMinimum', 'minItems', 'minProperties']\n        .forEach(prop => {\n          if (!isEmpty(base[prop]) && !isEmpty(schema[prop])) {\n            base[prop] = base[prop] > schema[prop] ? base[prop] : schema[prop];\n          }\n        });\n\n      return reverseDeepMerge(base, schema);\n    }, baseSchema);\n  }\n\n  private resolveMultiSchema(\n    mode: 'oneOf' | 'anyOf',\n    schemas: JSONSchema7[],\n    options: IOptions,\n  ): FormlyFieldConfig {\n    return {\n      type: 'multischema',\n      fieldGroup: [\n        {\n          type: 'enum',\n          defaultValue: -1,\n          templateOptions: {\n            multiple: mode === 'anyOf',\n            options: schemas\n              .map((s, i) => ({ label: s.title, value: i })),\n          },\n        },\n        {\n          fieldGroup: schemas.map((s, i) => ({\n            ...this._toFieldConfig(s, { ...options, resetOnHide: true }),\n            hideExpression: (m, fs, f) => {\n              const control = f.parent.parent.fieldGroup[0].formControl;\n              if (control.value === -1) {\n                const value = f.parent.fieldGroup\n                  .map((f, i) => [f, i] as [FormlyFieldConfig, number])\n                  .filter(([f, i]) => this.isFieldValid(f, schemas[i], options))\n                  .sort(([f1], [f2]) => {\n                    const matchedFields1 = totalMatchedFields(f1);\n                    const matchedFields2 = totalMatchedFields(f2);\n                    if (matchedFields1 === matchedFields2) {\n                      return 0;\n                    }\n\n                    return matchedFields2 > matchedFields1 ? 1 : -1;\n                  })\n                  .map(([, i]) => i)\n                ;\n\n                const normalizedValue = [value.length === 0 ? 0 : value[0]];\n                const formattedValue = mode === 'anyOf' ? normalizedValue : normalizedValue[0];\n                control.setValue(formattedValue);\n              }\n\n              return Array.isArray(control.value)\n                ? control.value.indexOf(i) === -1\n                : control.value !== i;\n            },\n          })),\n        },\n      ],\n    };\n  }\n\n  private resolveDefinition(schema: JSONSchema7, options: IOptions): JSONSchema7 {\n    const [uri, pointer] = schema.$ref.split('#/');\n    if (uri) {\n      throw Error(`Remote schemas for ${schema.$ref} not supported yet.`);\n    }\n\n    const definition = !pointer ? null : pointer.split('/').reduce(\n      (def, path) => def && def.hasOwnProperty(path) ? def[path] : null,\n      options.schema,\n    );\n\n    if (!definition) {\n      throw Error(`Cannot find a definition for ${schema.$ref}.`);\n    }\n\n    if (definition.$ref) {\n      return this.resolveDefinition(definition, options);\n    }\n\n    return {\n      ...definition,\n      ...['title', 'description', 'default'].reduce((annotation, p) => {\n        if (schema.hasOwnProperty(p)) {\n          annotation[p] = schema[p];\n        }\n\n        return annotation;\n      }, {}),\n    };\n  }\n\n  private resolveDependencies(schema: JSONSchema7) {\n    const deps = {};\n    const schemaDeps = {};\n\n    Object.keys(schema.dependencies || {}).forEach(prop => {\n      const dependency = schema.dependencies[prop] as JSONSchema7;\n      if (Array.isArray(dependency)) {\n        // Property dependencies\n        dependency.forEach(dep => {\n          if (!deps[dep]) {\n            deps[dep] = [prop];\n          } else {\n            deps[dep].push(prop);\n          }\n        });\n      } else {\n        // schema dependencies\n        schemaDeps[prop] = dependency;\n      }\n    });\n\n    return [deps, schemaDeps];\n  }\n\n  private guessType(schema: JSONSchema7) {\n    const type = schema.type as JSONSchema7TypeName;\n    if (!type && schema.properties) {\n      return 'object';\n    }\n\n    if (Array.isArray(type)) {\n      if (type.length === 1) {\n        return type[0];\n      }\n\n      if (type.length === 2 && type.indexOf('null') !== -1) {\n        return type[type[0] === 'null' ? 1 : 0];\n      }\n    }\n\n    return type;\n  }\n\n  private addValidator(field: FormlyFieldConfig, name: string, validator: (control: AbstractControl) => boolean) {\n    field.validators = field.validators || {};\n    field.validators[name] = validator;\n  }\n\n  private isEnum(schema: JSONSchema7) {\n    return schema.enum\n      || (schema.anyOf && schema.anyOf.every(isConst))\n      || (schema.oneOf && schema.oneOf.every(isConst))\n      || schema.uniqueItems && schema.items && !Array.isArray(schema.items) && this.isEnum(<JSONSchema7> schema.items);\n  }\n\n  private toEnumOptions(schema: JSONSchema7) {\n    if (schema.enum) {\n      return schema.enum.map(value => ({ value, label: value }));\n    }\n\n    const toEnum = (s: JSONSchema7) => {\n      const value = s.hasOwnProperty('const') ? s.const : s.enum[0];\n\n      return { value: value, label: s.title || value };\n    };\n\n    if (schema.anyOf) {\n      return schema.anyOf.map(toEnum);\n    }\n\n    if (schema.oneOf) {\n      return schema.oneOf.map(toEnum);\n    }\n\n    return this.toEnumOptions(<JSONSchema7> schema.items);\n  }\n\n  private isFieldValid(field: FormlyFieldConfig, schema: JSONSchema7, options: IOptions): boolean {\n    const { form } = (field.options as any)._buildField({\n      form: new FormGroup({}),\n      fieldGroup: [this._toFieldConfig(schema, { ...options, resetOnHide: true, ignoreDefault: true })],\n      model: field.model ? clone(field.model) : (field.fieldArray ? [] : {}),\n    });\n\n    return form.valid;\n  }\n}\n"]}